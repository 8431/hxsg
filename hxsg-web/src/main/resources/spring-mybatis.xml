<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<!--<context:component-scan base-package="com.hxsg">-->
		<!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->
		<!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />-->
	<!--</context:component-scan>-->
    <!-- 引入配置文件 -->
	<context:component-scan base-package="com.hxsg"/>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:configuration.xml" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath*:mybatis/*.xml" />
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hxsg.Dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!--&lt;!&ndash; 开启 mybatis事务 &ndash;&gt;-->
    <!--<bean id="transactionManagerDICTSource" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource" />-->
    <!--</bean>-->
    <!--<tx:advice id="txAdviceDICTSource" transaction-manager="transactionManagerDICTSource">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash;* com.hxsg.*.service.Impl..*.*(..))&ndash;&gt;-->

    <!--<aop:config  proxy-target-class="true">-->
        <!--<aop:pointcut id="bussinessServiceDICTSource"  expression="execution(* com.hxsg.*.service.impl.*.*(..))"/>-->
        <!--<aop:advisor pointcut-ref="bussinessServiceDICTSource" advice-ref="txAdviceDICTSource" />-->
    <!--</aop:config>-->
	<!-- 配置事务管理器 -->

</beans>

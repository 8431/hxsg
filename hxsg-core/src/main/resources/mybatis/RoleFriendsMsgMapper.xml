<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hxsg.Dao.RoleFriendsMsgMapper" >
  <resultMap id="BaseResultMap" type="com.hxsg.po.RoleFriendsMsg" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="roleid" property="roleid" jdbcType="INTEGER" />
    <result column="friendid" property="friendid" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="data" property="data" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="friendname" property="friendname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, roleid, friendid, message, data, type, status, rolename, friendname
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role_friends_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="getTalkMsgByTime" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from role_friends_msg
        where roleid=#{0} and friendid=#{1} and type in('私聊','陌生人')
        UNION
        select
        <include refid="Base_Column_List" />
        from role_friends_msg
        where roleid=#{2} and friendid=#{3} and type in('私聊','陌生人')
        order by data desc limit 0,6

    </select>
    <!--查询最近时间中的前20个玩家-->
    <select id="queryFriendsByTime" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
       SELECT distinct(friendid),friendname,roleid,rolename FROM role_friends_msg r where roleid=#{roleid,jdbcType=INTEGER} and type='私聊'  order by data desc limit 0,20
    </select>
    <!--查询一周内的聊天记录-->
    <select id="queryChatRecord" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
select * from (SELECT * FROM role_friends_msg r where roleid=#{0,jdbcType=INTEGER} and friendid=#{1,jdbcType=INTEGER} and type='私聊' and data  between current_date()-7  and  sysdate()
union all
SELECT * FROM role_friends_msg r where roleid=#{1,jdbcType=INTEGER} and friendid=#{0,jdbcType=INTEGER} and type='私聊' and data  between current_date()-7 and  sysdate()) g  order by data limit 0,20
    </select>
    <select id="selectAll" resultMap="BaseResultMap" parameterType="com.hxsg.po.RoleFriendsMsg"  >
        select
        <include refid="Base_Column_List" />
        from role_friends_msg
        <where>
            <if test="roleid != null" >
                roleid = #{roleid,jdbcType=INTEGER}
            </if>
            <if test="friendid != null" >
                and  friendid = #{friendid,jdbcType=INTEGER}
            </if>

            <if test="data != null" >
                and    data = #{data,jdbcType=TIMESTAMP}
            </if>
            <if test="type != null" >
                and   type = #{type,jdbcType=VARCHAR}
            </if>
            <if test="status != null" >
                and  status = #{status,jdbcType=VARCHAR}
            </if>

        </where>
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role_friends_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hxsg.po.RoleFriendsMsg" >
    insert into role_friends_msg (id, roleid, friendid, 
      message, data, type, 
      status, rolename, friendname
      )
    values (#{id,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, #{friendid,jdbcType=INTEGER}, 
      #{message,jdbcType=VARCHAR}, #{data,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, #{friendname,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hxsg.po.RoleFriendsMsg" >
    insert into role_friends_msg
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleid != null" >
        roleid,
      </if>
      <if test="friendid != null" >
        friendid,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="data != null" >
        data,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="friendname != null" >
        friendname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="friendid != null" >
        #{friendid,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="friendname != null" >
        #{friendname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxsg.po.RoleFriendsMsg" >
    update role_friends_msg
    <set >
      <if test="roleid != null" >
        roleid = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="friendid != null" >
        friendid = #{friendid,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="friendname != null" >
        friendname = #{friendname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxsg.po.RoleFriendsMsg" >
    update role_friends_msg
    set roleid = #{roleid,jdbcType=INTEGER},
      friendid = #{friendid,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      data = #{data,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      rolename = #{rolename,jdbcType=VARCHAR},
      friendname = #{friendname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
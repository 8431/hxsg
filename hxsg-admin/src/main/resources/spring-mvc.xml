<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                         http://www.springframework.org/schema/websocket
                         http://www.springframework.org/schema/websocket/spring-websocket.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.hxsg">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>
    <mvc:annotation-driven/>
    <!-- 主界面聊天信息配置start-->
    <bean id="chat" class="com.hxsg.index.websoket.indexWebScoketController" />
    <websocket:handlers >
        <websocket:mapping path="/chat" handler="chat" />
        <websocket:handshake-interceptors>
            <bean class="com.hxsg.index.websoket.indexWebScoketController" />
        </websocket:handshake-interceptors>
        <!--<websocket:sockjs />-->
    </websocket:handlers>

   <bean id="gsonBean" class="com.google.gson.Gson"/>
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>

    <mvc:default-servlet-handler/>
    <mvc:interceptors>
        <mvc:interceptor>
            <!--需拦截的地址-->
            <mvc:mapping path="/*/*/*" />
            <mvc:mapping path="/*/*" />
            <!--需排除拦截的地址-->
            <mvc:exclude-mapping path="/cocos2dLogin/*"/>
            <mvc:exclude-mapping path="/cocos2dRedis/*"/>
            <mvc:exclude-mapping path="/hxsgAdmin/*"/>
            <bean class="com.hxsg.Interceptor.HxsgUrlInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
</beans>